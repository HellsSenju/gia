{"version":3,"sources":["script.js"],"names":["container","document","getElementById","fetchWeather","fullUrl","response","data","initDate","regeneratorRuntime","async","_context","prev","next","encodeURIComponent","awrap","fetch","sent","json","proxy","parseInit","console","log","innerHTML","dataseries","forEach","entry","forecastDate","init","getTime","timepoint","formattedDate","formatDate","formattedTime","temp","temp2m","description","translateWeather","weather","Date","card","concat","createElement","t0","error","stop","year","parseInt","initStr","slice","month","day","hour","UTC","dateObj","dd","String","getUTCDate","padStart","getUTCMonth","yyyy","hh","mm","getUTCMinutes","clearday","pcloudy","mcloudy","cloudy","formatTime","rain","lightrain","snow","ts","fog"],"mappings":"aAAA,IAAMA,UAAYC,SAASC,eAAe,qBAI1C,SAAeC,eAAf,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAA,iFAAAP,EAAA,yBAAAS,mBAAA,kFAAAH,EAAAE,KAAA,EAAAJ,mBAAAM,MAAAC,MAAAX,IAAA,KAAA,EAAA,OAAAC,EAAAK,EAAAM,KAAAN,EAAAE,KAAA,EAAAJ,mBAAAM,MAEsBT,EAAAY,QAFtB,KAAA,EAEcC,EAFdR,EAAAM,KAIcZ,EAAee,UAAGN,EAAAA,MAJhCO,QAAAC,IAAAd,GAYQP,UAAUsB,UAAY,GAZ9BhB,EAAAiB,WAiBiBC,QAAQ,SAAAC,GARXlB,IATdmB,EASmCpB,IAAKqB,KATxCpB,EAAAqB,UAAA,GAAAH,EAAAI,UAAA,GAAA,KAUQT,QAAQC,IAAId,IAAAA,KAAZA,EAAAqB,YAEA5B,QAAUsB,IAAAA,IAAAA,KAAYf,EAEtBqB,UAAA,GAAAH,EAAAI,UAAA,GAAA,MASI,IAAMC,EAAgBC,WAAWL,GAvB7CM,EAe8BT,WAAYG,GAE1BO,EAACT,GAAAA,OAAQC,EAAAS,OAARV,MACLW,EAAAC,iBAAAX,EAAAY,SAGAjB,EAAYnB,SAASM,cAASqB,OAC9BR,EAAAA,UAAgBkB,eAChBC,EAAMT,UAAN,yBAAAU,OACMR,EADN,2CAAAQ,OAGgBf,EAHhB,4CAAAe,OAIoBJ,EAJpB,8CAAAI,OAMsBC,EANtB,wBAQAF,UAAKjB,YAALiB,KA/BZ7B,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAgC,GAAAhC,EAAA,MAAA,GAAAV,UAAAsB,UAAA,0CAAAF,QAAAuB,MAAAjC,EAAAgC,IAAA,KAAA,GAAA,IAAA,MAAA,OAAAhC,EAAAkC,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAyCQxB,SAAAA,UAAQuB,GAOZ,IAAME,EAAOC,SAASC,EAAQC,MAAM,EAAG,IAhD3CC,EAAAH,SAAAC,EAAAC,MAAA,EAAA,IAAA,EAAAE,EAAAJ,SAAAC,EAAAC,MAAA,EAAA,IAAAG,EAAAL,SAAAC,EAAAC,MAAA,EAAA,KAAA,OAAA,IAAAV,KAAAA,KAAAc,IAAAP,EAAAI,EAAAC,EAAAC,IAwDA,SAASpB,WAAWsB,GAChB,IAAMC,EAAKC,OAAOF,EAAQG,cAAcC,SAAS,EAAG,KAV/CtC,EAAAA,OAAU4B,EAASW,cAAA,GAAAD,SAAA,EAAA,KACdE,EAAGb,EAASC,iBACtB,MAAA,GAAAP,OAAcM,EAAd,KAAAN,OAAcM,EAAd,KAAAN,OAAuBO,GAEvB,SAAMI,WAAOL,GACb,IAAOc,EAAItB,OAASe,EAAKR,eAAkBM,SAA3C,EAAA,KAGJU,EAAAN,OAAAF,EAAAS,iBAAAL,SAAA,EAAA,KAWI,MAAA,GAAAjB,OAAUoB,EAAV,KAAApB,OAAgBqB,GARhB,SAAQzB,iBAAkBsB,GAY9B,MAXiBL,CACbU,SAAA,OACHC,QAAA,cAaOC,QAAS,wBAXjBC,OAASC,WACGC,KAAGb,QACHc,UAAUhB,eAClBiB,KAAA,OAGJC,GAAA,QAWQC,IAAK,SAVJpC,IAAAA,aAGD4B","file":"script.min.js","sourcesContent":["const container = document.getElementById('weather-container');\r\n\r\n// python -m http.server 8000 -–ø–æ–¥–Ω–∏–º–∞–µ–º —Å–µ—Ä–≤–µ—Ä\r\n\r\nasync function fetchWeather() {\r\n    try {\r\n        const proxy = 'https://corsproxy.io/?';\r\n        const apiUrl = 'https://www.7timer.info/bin/api.pl?lon=48.4&lat=54.3&product=civil&output=json';\r\n        const fullUrl = proxy + encodeURIComponent(apiUrl);\r\n\r\n        const response = await fetch(fullUrl);\r\n        const data = await response.json();\r\n        \r\n        const initDate = parseInit(data.init);\r\n        console.log(initDate)\r\n\r\n        container.innerHTML = '';\r\n\r\n        // const forecast = data.dataseries.slice(0, 8); // 24 —á–∞—Å–∞\r\n        const forecast = data.dataseries; // 24 —á–∞—Å–∞\r\n\r\n        forecast.forEach(entry => {\r\n            // console.log(entry)\r\n\r\n            const forecastDate = new Date(initDate.getTime() + entry.timepoint * 60 * 60 * 1000);\r\n            console.log(new Date(initDate.getTime()))\r\n            console.log(new Date(initDate.getTime() + entry.timepoint * 60 * 60 * 1000))\r\n            const formattedDate = formatDate(forecastDate);\r\n            const formattedTime = formatTime(forecastDate);\r\n\r\n            const temp = `${entry.temp2m}¬∞C`;\r\n            const description = translateWeather(entry.weather);\r\n\r\n            const card = document.createElement('div');\r\n            card.className = 'weather-card';\r\n            card.innerHTML = `\r\n                <h2>${formattedDate}</h2>\r\n                <p class=\"time\">${formattedTime}</p>\r\n                <div class=\"temp\">${temp}</div>\r\n                <div class=\"desc\">${description}</div>\r\n            `;\r\n            container.appendChild(card);\r\n        });\r\n    } catch (error) {\r\n        container.innerHTML = '<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã.</p>';\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n\r\n// üïí –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ init –≤ –æ–±—ä–µ–∫—Ç Date\r\nfunction parseInit(initStr) {\r\n    const year = parseInt(initStr.slice(0, 4));\r\n    const month = parseInt(initStr.slice(4, 6)) - 1; // –º–µ—Å—è—Ü –æ—Ç 0\r\n    const day = parseInt(initStr.slice(6, 8));\r\n    const hour = parseInt(initStr.slice(8, 10));\r\n    return new Date(Date.UTC(year, month, day, hour));\r\n}\r\n\r\n// üìÜ –§–æ—Ä–º–∞—Ç dd.MM.yyyy\r\nfunction formatDate(dateObj) {\r\n    const dd = String(dateObj.getUTCDate()).padStart(2, '0');\r\n    const mm = String(dateObj.getUTCMonth() + 1).padStart(2, '0');\r\n    const yyyy = dateObj.getUTCFullYear();\r\n    return `${dd}.${mm}.${yyyy}`;\r\n}\r\n\r\nfunction formatTime(dateObj) {\r\n    const hh = String(dateObj.getUTCHours()).padStart(2, '0');\r\n    const mm = String(dateObj.getUTCMinutes()).padStart(2, '0');\r\n    return `${hh}:${mm}`;\r\n}\r\n\r\n// üå¶Ô∏è –ü–µ—Ä–µ–≤–æ–¥ –ø–æ–≥–æ–¥—ã\r\nfunction translateWeather(code) {\r\n    const map = {\r\n        clearday: '–Ø—Å–Ω–æ',\r\n        pcloudy: '–ú–∞–ª–æ–æ–±–ª–∞—á–Ω–æ',\r\n        mcloudy: '–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å',\r\n        cloudy: '–ü–∞—Å–º—É—Ä–Ω–æ',\r\n        rain: '–î–æ–∂–¥—å',\r\n        lightrain: '–õ–µ–≥–∫–∏–π –¥–æ–∂–¥—å',\r\n        snow: '–°–Ω–µ–≥',\r\n        ts: '–ì—Ä–æ–∑–∞',\r\n        fog: '–¢—É–º–∞–Ω'\r\n    };\r\n    return map[code] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';\r\n}\r\n\r\nfetchWeather();\r\n"]}